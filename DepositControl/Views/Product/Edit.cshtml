

@model DepositControl.Bussines.Product

@{
    Layout = "~/Views/Shared/_LayoutBcri.cshtml";
    List<SelectListItem> stateProductList = (List<SelectListItem>)ViewBag.StateProductList;
    List<SelectListItem> stockList = (List<SelectListItem>)ViewBag.StockList;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Editar Producto</title>
</head>
<body>
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h1><b>Editar Producto</b></h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            @if (ViewBag.Alert != null)
            {
                <div class="alert alert-dismissable alert-danger">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <strong>Error!</strong> @ViewBag.Alert
                </div>
            }

            <div class="form-group">
                <label class="control-label col-sm-2">Nombre</label>
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Descripción</label>
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Precio</label>
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.01" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Estado del Producto</label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.StateProduct.Id, stateProductList, new { @class = "form-control", @id = "StateProduct_Id" })
                    @Html.ValidationMessageFor(model => model.StateProduct.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Volver a la Grilla", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            $(document).ready(function () {
                // Set dropdown values
                $("#StateProduct").val('@(Model.StateProduct)');
            });
        </script>
    }
</body>
</html>